#!/bin/bash

# === Configura√ß√£o ===
# IMPORTANTE: Descubra o nome correto do seu controle de captura!
# Execute 'amixer scontrols' ou 'amixer controls | grep Capture' para listar os controles.
# Nomes comuns: 'Capture', 'Mic', 'Internal Mic', 'Internal Mic Boost', 'Digital', etc.
# √Äs vezes voc√™ pode precisar ajustar tanto 'Capture' quanto um 'Boost'.
# Escolha o controle principal de volume/mudo para este script.
MIC_CONTROL="Capture"

# √çcones (requer fonte com suporte a Font Awesome, Nerd Fonts ou Emojis)
# Op√ß√£o 1: Font Awesome / Nerd Fonts
ICON_MIC_ON="ÔÑ∞"  # fa-microphone
ICON_MIC_OFF="ÔÑ± " # fa-microphone-slash
# Op√ß√£o 2: Emojis
# ICON_MIC_ON="üé§"
# ICON_MIC_OFF="üîá"

# Passo de ajuste do volume (ex: 5%)
VOL_STEP="5%"
# === Fim da Configura√ß√£o ===

# Verifica se amixer est√° dispon√≠vel
if ! command -v amixer &> /dev/null; then
    echo "Erro: amixer n√£o encontrado!"
    exit 1
fi

# --- 1. Processa A√ß√µes de Clique/Scroll (se $BLOCK_BUTTON estiver definido) ---
if [ -n "$BLOCK_BUTTON" ]; then
    case "$BLOCK_BUTTON" in
        1) amixer set "$MIC_CONTROL" toggle >/dev/null 2>&1 ;;       	# Esquerdo: Alterna Mudo
        3) pavucontrol >/dev/null 2>&1 ;; 				# Abre Pavucontrol
        4) amixer set "$MIC_CONTROL" "$VOL_STEP"+ >/dev/null 2>&1 ;; 	# Scroll Up: Vol+
        5) amixer set "$MIC_CONTROL" "$VOL_STEP"- >/dev/null 2>&1 ;; 	# Scroll Down: Vol-
    esac
    # Pequena pausa pode ser √∫til se o sistema demorar a refletir
    # sleep 0.1
fi

# Verifica se o comando amixer foi bem-sucedido e tenta novamente se falhar
MAX_RETRIES=5
RETRY_DELAY=1 # segundos
RETRIES=0

MIXER_OUTPUT=$(amixer get "$MIC_CONTROL" 2>&1)
EXIT_CODE=$?

while [ $EXIT_CODE -ne 0 ] && [ $RETRIES -lt $MAX_RETRIES ]; do
  RETRIES=$((RETRIES + 1))
  sleep $RETRY_DELAY
  MIXER_OUTPUT=$(amixer get "$MIC_CONTROL" 2>&1)
  EXIT_CODE=$?
done

# Se ainda falhou ap√≥s as tentativas
if [ $EXIT_CODE -ne 0 ]; then
  echo "$ICON_MIC_OFF ERR"
  exit 1
fi

# --- 3. Parseia a Sa√≠da do Amixer ---
# Tenta extrair o estado de mudo ([on] ou [off]) e o volume (%)
# A sa√≠da do amixer pode variar, este √© um m√©todo comum de parsear:
# Pega a linha que cont√©m a porcentagem e o estado on/off (geralmente a primeira com '[%]')
LINE=$(echo "$MIXER_OUTPUT" | grep -o '\[[0-9]*%\] \[[a-z]*\]' | head -n 1)

# Extrai o estado (on/off)
STATE=$(echo "$LINE" | grep -o '\[on\]\|\[off\]')

# Extrai o volume
VOLUME=$(echo "$LINE" | grep -o '[0-9]\+%' | head -n 1)

# Define o padr√£o caso algo falhe no parse
if [ -z "$STATE" ]; then STATE="[off]"; fi
if [ -z "$VOLUME" ]; then VOLUME="??%"; fi


# --- 4. Formata e Imprime a Sa√≠da ---
OUTPUT=""
if [[ "$STATE" == "[off]" ]]; then
    OUTPUT="$ICON_MIC_OFF Mudo" # Ou apenas o √≠cone: OUTPUT="$ICON_MIC_OFF"
else
    OUTPUT="$ICON_MIC_ON $VOLUME"
fi

echo "$OUTPUT"

exit 0
