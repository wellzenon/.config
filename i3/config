# Font for window titles. Will also be used by the bar unless a different font
# font pango: Noto Sans Regular 10
font pango: JetBrainsMono Nerd Font 10

# set the mod key to the winkey:
set $mod Mod4
set $alt Mod1

#####################
# workspace layout: #
#####################

# default i3 tiling mode:
workspace_layout default

# i3 stacking layout:
# Each window will be fullscreen and tabbed top to bottom.
#workspace_layout stacking

# i3 tabbed layout:
# Each new window will open fullscreen as a tab (left to right)
#workspace_layout tabbed

##############################
# extra options for windows: #
##############################

#border indicator on windows:
default_border pixel 0

# thin borders
hide_edge_borders both

# Set inner/outer gaps
gaps inner 10
gaps outer 0
# gaps top 2
smart_gaps on

# show window title bars (not officially supported with i3gaps)
#default_border normal

# window title alignment
#title_align center

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# i3bar autoshow function
# exec_always --no-startup-id ~/.config/i3/scripts/i3bar-autoshow

# switch to workspace
bindcode $mod+10 workspace number 1
bindcode $mod+11 workspace number 2
bindcode $mod+12 workspace number 3
bindcode $mod+13 workspace number 4
bindcode $mod+14 workspace number 5
bindcode $mod+15 workspace number 6
bindcode $mod+16 workspace number 7
bindcode $mod+17 workspace number 8
bindcode $mod+18 workspace number 9
bindcode $mod+19 workspace number 10

# switch to workspace with numpad keys
bindcode $mod+87 workspace number 1
bindcode $mod+88 workspace number 2
bindcode $mod+89 workspace number 3
bindcode $mod+83 workspace number 4
bindcode $mod+84 workspace number 5
bindcode $mod+85 workspace number 6
bindcode $mod+79 workspace number 7
bindcode $mod+80 workspace number 8
bindcode $mod+81 workspace number 9
bindcode $mod+90 workspace number 10

# switch to workspace with numlock numpad keys
bindcode $mod+Mod2+87 workspace number 1
bindcode $mod+Mod2+88 workspace number 2
bindcode $mod+Mod2+89 workspace number 3
bindcode $mod+Mod2+83 workspace number 4
bindcode $mod+Mod2+84 workspace number 5
bindcode $mod+Mod2+85 workspace number 6
bindcode $mod+Mod2+79 workspace number 7
bindcode $mod+Mod2+80 workspace number 8
bindcode $mod+Mod2+81 workspace number 9
bindcode $mod+Mod2+90 workspace number 10

# move focused container to workspace
bindcode $mod+Shift+10 move container to workspace  number 1
bindcode $mod+Shift+11 move container to workspace  number 2
bindcode $mod+Shift+12 move container to workspace  number 3
bindcode $mod+Shift+13 move container to workspace  number 4
bindcode $mod+Shift+14 move container to workspace  number 5
bindcode $mod+Shift+15 move container to workspace  number 6
bindcode $mod+Shift+16 move container to workspace  number 7
bindcode $mod+Shift+17 move container to workspace  number 8
bindcode $mod+Shift+18 move container to workspace  number 9
bindcode $mod+Shift+19 move container to workspace  number 10

# move focused container to workspace with numpad keys
bindcode $mod+Shift+Mod2+87 move container to workspace  number 1
bindcode $mod+Shift+Mod2+88 move container to workspace  number 2
bindcode $mod+Shift+Mod2+89 move container to workspace  number 3
bindcode $mod+Shift+Mod2+83 move container to workspace  number 4
bindcode $mod+Shift+Mod2+84 move container to workspace  number 5
bindcode $mod+Shift+Mod2+85 move container to workspace  number 6
bindcode $mod+Shift+Mod2+79 move container to workspace  number 7
bindcode $mod+Shift+Mod2+80 move container to workspace  number 8
bindcode $mod+Shift+Mod2+81 move container to workspace  number 9
bindcode $mod+Shift+Mod2+90 move container to workspace  number 10

# move focused container to workspace with numpad keys
bindcode $mod+Shift+87 move container to workspace  number 1
bindcode $mod+Shift+88 move container to workspace  number 2
bindcode $mod+Shift+89 move container to workspace  number 3
bindcode $mod+Shift+83 move container to workspace  number 4
bindcode $mod+Shift+84 move container to workspace  number 5
bindcode $mod+Shift+85 move container to workspace  number 6
bindcode $mod+Shift+79 move container to workspace  number 7
bindcode $mod+Shift+80 move container to workspace  number 8
bindcode $mod+Shift+81 move container to workspace  number 9
bindcode $mod+Shift+90 move container to workspace  number 10

# resize window (you can also use the mouse for that):
#mode "resize" {
# These bindings trigger as soon as you enter the resize mode
# Pressing left will shrink the window's width.
# Pressing right will grow the window's width.
# Pressing up will shrink the window's height.
# Pressing down will grow the window's height.
#        bindsym h resize shrink width 10 px or 10 ppt
#        bindsym j resize grow height 10 px or 10 ppt
#        bindsym k resize shrink height 10 px or 10 ppt
#        bindsym l resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys:
#        bindsym Left resize shrink width 10 px or 10 ppt
#        bindsym Down resize grow height 10 px or 10 ppt
#        bindsym Up resize shrink height 10 px or 10 ppt
#        bindsym Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape
#	     bindsym Return mode "default"
#        bindsym Escape mode "default"
#}

#bindsym $mod+r mode "resize"

######################################
# keybindings for different actions: #
######################################

#move workspace to right screen
bindsym $mod+Shift+a move workspace to output right

# switch/iterate between workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev
# cycle through all windows with rofi
bindsym $alt+Tab exec --no-startup-id rofi -show window -config ~/.config/rofi/rofitabmenu.rasi

# cycle through windows in the current workspace
# bindsym $alt+Tab focus prev
# bindsym $alt+Shift+Tab focus next
# exec_always --no-startup-id i3-focus-last server
# bindsym $alt+Tab exec --no-startup-id i3-focus-last
# exec_always --no-startup-id ~/.config/i3/scripts/alttab.py --active-workspace
# bindsym $alt+Tab exec --no-startup-id ~/.config/i3/scripts/alttab.py --switch 

# start a terminal
bindsym $mod+Return exec ghostty

# kill focused window
bindsym $mod+q exec --no-startup-id ~/.config/i3/scripts/smartkill.sh
bindsym --whole-window $mod+button2 exec --no-startup-id ~/.config/i3/scripts/smartkill.sh

# exit-menu
bindsym $mod+Shift+e exec --no-startup-id ~/.config/i3/scripts/powermenu
bindsym $mod+Shift+q exec --no-startup-id systemctl hibernate

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to update i3)
bindsym $mod+Shift+r restart

# Backlight control
#bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight +10 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"
#bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -10 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"
# Backlight setting using dunst osc
bindsym XF86MonBrightnessUp exec --no-startup-id ~/.config/i3/scripts/volume_brightness.sh brightness_up
bindsym XF86MonBrightnessDown exec --no-startup-id ~/.config/i3/scripts/volume_brightness.sh brightness_down

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+s split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
# bindsym $mod+g layout tabbed
bindsym $mod+Shift+s layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
# bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# open new empty workspace
bindsym $mod+Shift+n exec --no-startup-id ~/.config/i3/scripts/empty_workspace

# Multimedia Keys

# volume
# use meta keys without showing osc
#bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master 5%+ && pkill -RTMIN+1 i3blocks
#bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master 5%- && pkill -RTMIN+1 i3blocks
# use meta keys showing osc using dunst
bindsym XF86AudioRaiseVolume exec --no-startup-id ~/.config/i3/scripts/volume_brightness.sh volume_up
bindsym XF86AudioLowerVolume exec --no-startup-id ~/.config/i3/scripts/volume_brightness.sh volume_down

# gradular volume control
bindsym $mod+XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master 1%+ && pkill -RTMIN+1 i3blocks
bindsym $mod+XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master 1%- && pkill -RTMIN+1 i3blocks

# mute
#bindsym XF86AudioMute exec --no-startup-id amixer sset Master toggle && killall -USR1 i3blocks
# use meta keys showing osc using dunst
bindsym XF86AudioMute exec --no-startup-id ~/.config/i3/scripts/volume_brightness.sh volume_mute

# mic mute toggle
bindsym XF86AudioMicMute exec amixer sset Capture toggle

# audio control
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause 
# Above line will also work for pausing
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

# Redirect sound to headphones
bindsym $mod+p exec --no-startup-id /usr/local/bin/switch-audio-port

## App shortcuts
# bindsym $mod+c exec /usr/bin/thunar
bindsym $mod+c exec /usr/bin/ghostty --title=yazi -e /usr/bin/yazi
bindsym $mod+e exec /usr/bin/ghostty -e /usr/bin/nvim
bindsym $mod+w exec /usr/bin/zen-browser
bindsym Print exec --no-startup-id scrot -fs ~/%Y-%m-%d-%T-screenshot.png && notify-send "Screenshot saved to ~/$(date +"%Y-%m-%d-%T")-screenshot.png"

# Power Profiles menu switcher (rofi)
bindsym $mod+Shift+p exec --no-startup-id ~/.config/i3/scripts/power-profiles

#terminal for scratchpad
bindsym $mod+space exec ~/.config/i3/scripts/sidepanel toggle_term bottom 50 30
bindsym $mod+n exec ~/.config/i3/scripts/sidepanel toggle_notes right 30 75


#####################################
# Application menu handled by rofi: #
#####################################

## rofi bindings fancy application menu ($mod+d /F9 optional disabled)

# keybinding in fancy rofi (automated):
bindsym F1 exec --no-startup-id ~/.config/i3/scripts/keyhint-2
# alternative
# keybinding list in editor:
# bindsym $mod+F1 exec --no-startup-id xed ~/.config/i3/keybindings

bindsym $mod+d exec --no-startup-id rofi -config ~/.config/rofi/rofidmenu.rasi -show drun

#bindsym F9 exec --no-startup-id rofi -modi drun -show drun \
#		-config ~/.config/rofi/rofidmenu.rasi

## rofi bindings for window menu ($mod+t /F10 optional disabled)

bindsym $mod+t exec --no-startup-id rofi -show window \
		-config ~/.config/rofi/rofitabmenu.rasi

#bindsym F10 exec --no-startup-id rofi -show window \
#		-config ~/.config/rofi/rofidmenu.rasi

# rofi bindings to manage clipboard (install rofi-greenclip from the AUR)

exec --no-startup-id greenclip daemon>/dev/null
bindsym $mod+Shift+v exec --no-startup-id rofi -modi "clipboard:greenclip print" -show clipboard \
		-config ~/.config/rofi/rofikeyhint.rasi

##########################################
# configuration for workspace behaviour: #
##########################################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# set $ws1 "1: "
# set $ws2 "2: "
# set $ws3 "3:"
# set $ws4 "4:"
# set $ws5 "5:"
# set $ws6 "6"
# set $ws7 "7"
# set $ws8 "8"
# set $ws9 "9"
# set $ws10 "10"

# use workspaces on different displays:
# where you have to replace VGA-0/HDMI-0 with the names for your displays
# you can get from xrandr command
# workspace 1 output eDP-1
# workspace 2 output HDMI-1-0
#workspace $ws3 output HDMI-0
#workspace $ws4 output HDMI-0
#workspace $ws5 output HDMI-0

# bind program to workspace and focus to them on startup:
# assign [class="Xfce4-terminal"] $ws1
# assign [class="ghostty"] $ws1
# assign [class="zen"] $ws2
# assign [class="firefox"] $ws2
# assign [class="Navigator"] $ws2
# assign [class="Thunar"] $ws3

# automatic set focus new window if it opens on another workspace than the current:
for_window [urgent=latest] focus
for_window [class=ghostty] focus
for_window [class=(?i)zen-browser] focus
for_window [class=Thunar] focus

##############
# compositor #
##############

# transparency
# uncomment one of them to be used
# options could need changes, related to used GPU and drivers.
# to find the right setting consult the archwiki or ask at the forum.
#
# xcompmgr: https://wiki.archlinux.org/title/Xcompmgr
# manpage: https://man.archlinux.org/man/xcompmgr.1.en
# install xcompmgr package to use it (yay -S xcompmgr)
#exec --no-startup-id xcompmgr -C -n &
# or an more specialized config like this:
#exec --no-startup-id xcompmgr -c -C -t-5 -l-5 -r4.2 -o.55 &
#
# or:
#
# picom: https://wiki.archlinux.org/title/Picom
# manpage: https://man.archlinux.org/man/picom.1.en
# The default configuration is available in /etc/xdg/picom.conf 
# For modifications, it can be copied to ~/.config/picom/picom.conf or ~/.config/picom.conf
# install picom package (yay -S picom)
# start using default config 
# exec_always --no-startup-id picom -GCb
#
# for custom config:
exec_always --no-startup-id picom --config  ~/.config/picom/picom.conf

#############################################
# autostart applications/services on login: #
#############################################

# output detection
exec_always --no-startup-id ~/.config/i3/scripts/output-hotplug

#get auth work with polkit-gnome
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# dex execute .desktop files + apps using /etc/xdg/autostart.
# when second to i3 a DE is installed or mixed usage of i3 + xfce4 or GNOME
# in this cases better disable dex and use manual starting apps using xdg/autostart
# if enabled you should comment welcome app.
# https://github.com/jceb/dex
#exec --no-startup-id dex -a -s /etc/xdg/autostart/:~/.config/autostart/
exec --no-startup-id dex --autostart --environment i3

# Swap Caps Lock and Escape at session start
exec_always --no-startup-id setxkbmap -option caps:swapescape

# start welcome app
#exec --no-startup-id sh /usr/share/endeavouros/scripts/welcome --startdelay=3 

# num lock activated
#exec --no-startup-id numlockx on

# configure multiple keyboard layouts and hotkey to switch (Alt+CAPSLOCK in this example)
#exec --no-startup-id setxkbmap -layout 'us,sk' -variant altgr-intl,qwerty -option 'grp:alt_caps_toggle'

# start conky:
#exec_always --no-startup-id conky

# start a script to setup displays
exec_always --no-startup-id ~/.screenlayout/monitor.sh

# LISTENERS
exec_always --no-startup-id /bin/bash /home/ton/.config/i3/scripts/i3-title-listener
exec_always --no-startup-id playerctl --follow status | while read -r; do pkill -RTMIN+10 i3blocks; done &

# start a script to a better tiling layout
# exec_always --no-startup-id i3-auto-layout

# set wallpaper
# exec --no-startup-id sleep 2 && nitrogen --restore
exec --no-startup-id sleep 1 && feh --bg-fill ~/.config/wallpapers/orion_nebula_nasa_heic0601a.jpg
# exec --no-startup-id sleep 1 && feh --bg-fill ~/.config/wallpaper/peakpx.jpg
# exec --no-startup-id sleep 1 && feh --bg-fill /usr/share/endeavouros/backgrounds/endeavouros-wallpaper.png

# set powersavings for display:
exec --no-startup-id xset s 480 dpms 600 600 600

# disable power saving (for example if using xscreensaver)
#exec --no-startup-id xset -dpms

# use xautolock to use autosuspend rules for mobile devices
# https://wiki.archlinux.org/title/Session_lock#xautolock
#exec --no-startup-id xautolock -time 60 -locker "systemctl suspend"


# xscreensaver
# https://www.jwz.org/xscreensaver
#exec --no-startup-id xscreensaver --no-splash

# Desktop notifications
# dunst config used ~/.config/dunst/dunstrc
# set alternative config if needed:
#exec --no-startup-id /usr/bin/dunst --config ~/.config/dunst/dunstrc
# may need to run dbus-launch explicitly: 
#exec --no-startup-id dbus-launch /usr/bin/dunst
exec --no-startup-id /usr/bin/dunst
# alternative if you installed aside with XFCE4:
# exec --no-startup-id /usr/lib/xfce4/notifyd/xfce4-notifyd &

# autotiling script
# https://github.com/nwg-piotr/autotiling
# `yay -S autotiling ;) (it is in AUR)
#exec_always --no-startup-id autotiling

# Autostart apps as you like
#exec --no-startup-id sleep 2 && xfce4-terminal
# exec --no-startup-id sleep 7 && firefox https://github.com/endeavouros-team/endeavouros-i3wm-setup/blob/main/force-knowledge.md
exec --no-startup-id sleep 3 && syncthing serve --no-browser

###############
# system tray #
###############
# if you do not use dex: exec --no-startup-id dex --autostart --environment i3
# you need to have tray apps started manually one by one:

# start blueberry app for managing bluetooth devices from tray:
#exec --no-startup-id blueberry-tray

# networkmanager-applet
#exec --no-startup-id nm-applet

# clipman-applet
#exec --no-startup-id xfce4-clipman

##################
# floating rules #
##################

# set floating (nontiling) for apps needing it
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable

# set floating (nontiling) for special apps
for_window [class="Xsane" instance="xsane"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [window_role="About"] floating enable

# set border of floating window
for_window [class="urxvt"] border pixel 1

# set terminal scratchpad functionality
for_window [class="^com.terminal.scratchpad$"] floating enable, move scratchpad, mark "toggle_term"
exec --no-startup-id ghostty --class=com.terminal.scratchpad --background=#3e4045 

for_window [class="^com.terminal.notes$"] floating enable, move scratchpad, mark "toggle_notes"
exec --no-startup-id ghostty --class=com.terminal.notes --background=#3e4045 -e "NVIM_APPNAME=nvim-notes /usr/bin/nvim ~/Documentos/obsidian/TODO.md"
# start apps
exec --no-startup-id i3-msg "workspace number 2; exec zen-browser"
exec --no-startup-id i3-msg "workspace number 1; exec ghostty -e nvim"

# set size of floating window
#for_window [window_role="(?i)GtkFileChooserDialog"] resize set 640 480 #to set size of file choose dialog
#for_window [class=".*"] resize set 640 480 #to change size of all floating windows 

# set position of floating window
#for_window [class=".*"] move position center

######################################
# color settings for bar and windows #
######################################

# Define colors variables:
set $darkbluetrans	#08052b00
set $darkgreytrans	#282c3400
set $darkgrey		#30302e00
# set $darkgrey		#2C2D30
# set $darkgrey		#282c34
set $darkblue		#08052b
set $lightblue		#5294e2
set $urgentred		#e53935
# set $white		#FFFFFF
set $white		#abb2bf
set $black		#000000
set $purple		#e345ff
# set $darkgrey		#383c4a
set $grey		#b0b5bd
set $mediumgrey		#8b8b8b
set $yellowbrown	#e1b700

# define colors for windows:
#class		        	border		bground		text		indicator	child_border
client.focused		    	$white		$darkblue	$white		$mediumgrey	$mediumgrey
client.unfocused	    	$grey		$darkblue	$grey		$darkgrey	$darkgrey
client.focused_inactive		$grey		$darkblue	$grey		$black		$black
client.urgent		    	$urgentred	$urgentred	$white		$yellowbrown	$yellowbrown

############################################
# bar settings (input comes from i3blocks) #
############################################

# Start i3bar to display a workspace bar
# (plus the system information i3status finds out, if available)
bar {
		# font pango: Noto Sans Regular 10
		# font pango: ZedMono NF Extd 9
		# font pango: VictorMono NF Medium 9
		# font pango: ProFont IIx Nerd Font 7
		font pango: JetBrainsMono Nerd Font 10
		# font pango: Maple Mono Normal NF 9
		mode dock
		# hidden_state show
		# modifier $mod
		status_command i3blocks -c ~/.config/i3/i3blocks.conf
	    	position top
	    	i3bar_command i3bar --transparency
# it could be that you have no primary display set: set one (xrandr --output <output> --primary)
# reference: https://i3wm.org/docs/userguide.html#_tray_output
		    tray_output none
		    # tray_padding 3

# When strip_workspace_numbers is set to yes,
# any workspace that has a name of the form
# “[n][:][NAME]” will display only the name.
strip_workspace_numbers yes
##strip_workspace_name no

		    colors {
		    separator          $darkgrey
		    background         $darkgrey
		    statusline         $white
#                          		border 		        bg		txt		indicator
		focused_workspace	$darkgrey	   	$darkgrey	$white		$white
		active_workspace	$darkgrey	   	$darkgrey	$white		$white
		inactive_workspace	$darkgrey	   	$darkgrey	$mediumgrey	$white
		urgent_workspace	$darkgrey	   	$darkgrey	$red		$white
	}
}

# you can add different bars for multidisplay setups on each display:
# set output HDMI-0 to the display you want the bar, --transparency can be set.
# Transparency needs rgba color codes to be used where the last two letters are the transparency factor see here:
# https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4
# #08052be6 --> e6=90%

# bar {
#	font pango: Noto Sans Regular 10
#	status_command i3blocks -c ~/.config/i3/i3blocks-2.conf
#	i3bar_command i3bar --transparency
#	output HDMI-0
#	position bottom
#
# When strip_workspace_numbers is set to yes,
# any workspace that has a name of the form
# “[n][:][NAME]” will display only the name.
#strip_workspace_numbers yes
##strip_workspace_name no
#
#	colors {
#		separator          $purple
#		background         $darkbluetrans
#        	statusline         $white
#					border		bg		txt		indicator
#		focused_workspace	$lighterblue	$lighterblue	$darkblue	$purple
#		active_workspace	$lightdblue	$lightdblue	$darkblue	$purple
#		inactive_workspace	$darkblue	$darkblue	$lightdblue	$purple
#		urgent_workspace	$urgentred	$urgentred	$white		$purple
#	}
#}

# start autonaming workspaces daemon
exec_always --no-startup-id ~/.config/i3/scripts/i3-ws-autoname-d.py --delimiter ""
